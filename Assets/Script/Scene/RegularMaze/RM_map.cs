using UnityEngine;
using System.Collections;
using System.Collections.Generic;

public class RM_RoadData
{
    public int nX = 0;
    public int nY = 0;
    public RM_RoadData(int _x, int _y)
    { nX = _x;
        nY = _y;
    }
}

public class RM_map
{
    private int[,] map;
    private List<RM_RoadData> mRoadList = new List<RM_RoadData>();

    public int[,] GetObjMapLv1(int _id)
    {
        switch (_id)
        {
            case 1:
                #region 
                InitRoad("2,7|3,7|3,6|4,6|5,6|6,6|7,6|8,6|8,5|8,4|7,4|7,3|7,2|");
                map = new int[9, 9] {
                    { 0, 0, 0, 0, 0, 0, 0, 0, 0, },
                    { 0, 0, 0, 0, 0, 0, 0, 0, 0, },
                    { 0, 0, 0, 0, 0, 0, 0, 1, 0, },
                    { 0, 0, 0, 0, 0, 0, 2, 3, 3, },
                    { 0, 0, 0, 0, 0, 0, 1, 2, 1, },
                    { 0, 0, 0, 2, 3, 1, 2, 3, 3, },
                    { 2, 2, 3, 3, 1, 2, 3, 1, 2, },
                    { 0, 0, 1, 2, 1, 2, 3, 3, 1, },
                    { 0, 0, 3, 0, 0, 0, 0, 0, 0, }, };
                #endregion
                break;
            case 2:
                #region              
                InitRoad("2,7|2,6|2,5|3,5|3,4|4,4|5,4|5,3|5,2|5,1|6,1|");
                map = new int[9, 9] {
                    { 0, 0, 0, 0, 0, 1, 0, 0, 0, },
                    { 0, 0, 0, 0, 3, 1, 2, 0, 0, },
                    { 0, 0, 0, 0, 2, 3, 3, 0, 0, },
                    { 0, 0, 0, 1, 2, 2, 2, 0, 0, },
                    { 0, 0, 2, 2, 3, 1, 1, 0, 0, },
                    { 0, 2, 3, 1, 3, 1, 0, 0, 0, },
                    { 3, 2, 2, 1, 0, 0, 0, 0, 0, },
                    { 0, 0, 1, 3, 0, 0, 0, 0, 0, },
                    { 0, 0, 3, 0, 0, 0, 0, 0, 0, }, };
                #endregion
                break;
            case 3:
                #region
                InitRoad("2,8|3,8|4,8|4,7|4,6|4,5|4,4|5,4|6,4|7,4|8,4|8,3|8,2|");
                map = new int[9, 9] {
                    { 0, 0, 0, 0, 0, 0, 0, 0, 0, },
                    { 0, 0, 0, 0, 0, 0, 0, 0, 0, },
                    { 0, 0, 0, 0, 0, 0, 0, 0, 1, },
                    { 0, 0, 0, 0, 3, 1, 2, 3, 3, },
                    { 0, 0, 0, 1, 1, 2, 3, 1, 2, },
                    { 0, 0, 0, 2, 3, 2, 3, 3, 1, },
                    { 3, 2, 0, 1, 2, 1, 0, 0, 0, },
                    { 0, 0, 3, 1, 1, 3, 0, 0, 0, },
                    { 0, 0, 1, 2, 3, 2, 0, 0, 0, }, };
                #endregion
                break;
            case 4:
                #region
                InitRoad("1,6|1,5|0,5|0,4|0,3|0,2|1,2|1,1|2,1|3,1|4,1|5,1|5,0|6,0|");
                map = new int[9, 9] {
                    { 0, 2, 2, 1, 1, 1, 2, 0, 0, },
                    { 2, 2, 3, 1, 2, 3, 2, 0, 0, },
                    { 3, 1, 3, 3, 1, 2, 0, 0, 0, },
                    { 2, 2, 0, 0, 0, 0, 0, 0, 0, },
                    { 1, 1, 0, 0, 0, 0, 0, 0, 0, },
                    { 3, 2, 1, 0, 0, 0, 0, 0, 0, },
                    { 3, 1, 3, 0, 0, 0, 0, 0, 0, },
                    { 0, 0, 2, 0, 0, 0, 0, 0, 0, },
                    { 0, 0, 3, 0, 0, 0, 0, 0, 0, }, };
                #endregion
                break;
            case 5:
                #region
                InitRoad("0,6|0,5|1,5|2,5|2,4|3,4|3,3|3,2|4,2|5,2|6,2|7,2|");
                map = new int[9, 9] {
                    { 0, 0, 0, 0, 0, 0, 0, 0, 0, },
                    { 0, 0, 0, 1, 2, 3, 1, 0, 0, },
                    { 0, 0, 1, 2, 3, 1, 2, 3, 2, },
                    { 0, 0, 1, 1, 3, 1, 2, 2, 0, },
                    { 1, 2, 2, 3, 2, 0, 0, 0, 0, },
                    { 2, 3, 1, 3, 0, 0, 0, 0, 0, },
                    { 1, 3, 3, 0, 0, 0, 0, 0, 0, },
                    { 0, 0, 3, 0, 0, 0, 0, 0, 0, },
                    { 0, 0, 2, 0, 0, 0, 0, 0, 0, }, };
                #endregion
                break;
            case 6:
                #region
                InitRoad("1,6|2,6|2,5|2,4|2,3|1,3|0,3|0,2|0,1|1,1|2,1|3,1|3,0|4,0|5,0|6,0|");
                map = new int[9, 9] {
                    { 0, 0, 1, 1, 2, 3, 1, 0, 0, },
                    { 3, 1, 2, 3, 2, 3, 0, 0, 0, },
                    { 2, 2, 2, 3, 0, 0, 0, 0, 0, },
                    { 1, 3, 2, 1, 0, 0, 0, 0, 0, },
                    { 1, 3, 1, 3, 0, 0, 0, 0, 0, },
                    { 0, 3, 3, 2, 0, 0, 0, 0, 0, },
                    { 3, 1, 2, 1, 0, 0, 0, 0, 0, },
                    { 0, 0, 2, 0, 0, 0, 0, 0, 0, },
                    { 0, 0, 3, 0, 0, 0, 0, 0, 0, }, };
                #endregion
                break;
            case 7:
                #region
                InitRoad("2,7|3,7|3,6|3,5|3,4|2,4|2,3|1,3|0,3|0,2|0,1|0,0|1,0|2,0|3,0|4,0|5,0|6,0|");
                map = new int[9, 9] {
                    { 3, 1, 2, 3, 1, 2, 3, 0, 0, },
                    { 2, 1, 2, 2, 1, 1, 0, 0, 0, },
                    { 1, 1, 3, 0, 0, 0, 0, 0, 0, },
                    { 3, 2, 1, 1, 0, 0, 0, 0, 0, },
                    { 2, 2, 3, 2, 1, 0, 0, 0, 0, },
                    { 0, 0, 3, 1, 3, 0, 0, 0, 0, },
                    { 3, 2, 3, 3, 2, 0, 0, 0, 0, },
                    { 0, 0, 1, 2, 2, 0, 0, 0, 0, },
                    { 0, 0, 3, 1, 0, 0, 0, 0, 0, }, };
                #endregion
                break;
        }
        return map;
    }

    //格式: 2,3|3,5| ...
    private void InitRoad(string _strRoadData)
    {
        mRoadList.Clear();

        _strRoadData = _strRoadData.Substring(0, _strRoadData.Length - 1);
        string[] posData = _strRoadData.Split(new char[] { '|' });
        for (int i = 0; i < posData.Length; i++)
        {
            string strPos = posData[i];
            string[] strXY = strPos.Split(new char[] { ',' });

            int nX = int.Parse(strXY[0]);
            int nY = int.Parse(strXY[1]);

            mRoadList.Add(new RM_RoadData(nX, nY));
        }
    }
    public List<RM_RoadData> GetRoad()
    {
        return mRoadList;
    }

}

